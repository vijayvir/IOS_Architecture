{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 PTSerif-Regular;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red246\green246\blue246;\red21\green78\blue144;
\red67\green67\blue67;\red255\green255\blue255;\red71\green91\blue98;\red2\green32\blue41;\red129\green144\blue144;
\red189\green54\blue19;\red198\green28\blue111;\red33\green118\blue199;\red37\green146\blue134;\red115\green138\blue4;
\red10\green41\blue51;\red2\green16\blue20;}
{\*\expandedcolortbl;\csgray\c100000;\cssrgb\c13333\c13333\c13333;\cssrgb\c97255\c97255\c97255;\cssrgb\c9412\c38824\c63137;
\cssrgb\c33333\c33333\c33333;\cssrgb\c100000\c100000\c100000;\cssrgb\c34510\c43137\c45882;\cssrgb\c0\c16863\c21176;\cssrgb\c57647\c63137\c63137;
\cssrgb\c79608\c29412\c8627;\cssrgb\c82745\c21176\c50980;\cssrgb\c14902\c54510\c82353;\cssrgb\c16471\c63137\c59608;\cssrgb\c52157\c60000\c0;
\cssrgb\c2745\c21176\c25882;\csgenericrgb\c784\c6275\c7843;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs36\fsmilli18400 \cf2 \cb3 \expnd0\expndtw0\kerning0
What this does is it defines a static variable (but only global to this {\field{\*\fldinst{HYPERLINK "http://en.wikipedia.org/wiki/Translation_unit_(programming"}}{\fldrslt \cf4 \ul \ulc4 translation unit}})) called 
\f1\fs29\fsmilli14720 \cf5 \cb6 sharedMyManager
\f0\fs36\fsmilli18400 \cf2 \cb3  which is then initialised once and only once in 
\f1\fs29\fsmilli14720 \cf5 \cb6 sharedManager
\f0\fs36\fsmilli18400 \cf2 \cb3 . The way we ensure that it\'92s only created once is by using the {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/Performance/Reference/GCD_libdispatch_Ref/Reference/reference.html#//apple_ref/c/func/dispatch_once"}}{\fldrslt 
\f1\fs29\fsmilli14720 \cf5 \cb6 \ul \ulc5 dispatch_once}} method from {\field{\*\fldinst{HYPERLINK "http://developer.apple.com/library/ios/#documentation/Performance/Reference/GCD_libdispatch_Ref/Reference/reference.html"}}{\fldrslt \cf4 \ul \ulc4 Grand Central Dispatch (GCD)}}. This is thread safe and handled entirely by the OS for you so that you don\'92t have to worry about it at all.\
\
\
\pard\pardeftab720\partightenfactor0

\f2\i\fs26 \cf7 \cb8 import "MyManager.h"
\f1\i0 \cf9 \
\
\pard\pardeftab720\partightenfactor0
\cf10 @implementation\cf9  \cf11 MyManager\cf9 \
\
\cf10 @synthesize\cf9  \cf12 someProperty\cf9 ;\
\
\pard\pardeftab720\partightenfactor0

\f2\i \cf7 #pragma mark Singleton Methods
\f1\i0 \cf9 \
\
\pard\pardeftab720\partightenfactor0
\cf10 +\cf9  (\cf13 id\cf9 )
\f3\b \cf12 sharedManager
\f1\b0 \cf9  \{\
    \cf10 static\cf9  \cf12 MyManager\cf9  
\f3\b *
\f1\b0 \cf12 sharedMyManager\cf9  
\f3\b =
\f1\b0  \cf14 nil\cf9 ;\
    \cf10 static\cf9  \cf12 dispatch_once_t\cf9  \cf12 onceToken\cf9 ;\
    \cf12 dispatch_once\cf9 (
\f3\b &
\f1\b0 \cf12 onceToken\cf9 , 
\f3\b ^
\f1\b0 \{\
        \cf12 sharedMyManager\cf9  
\f3\b =
\f1\b0  [[\cf12 self\cf9  \cf12 alloc\cf9 ] \cf12 init\cf9 ];\
    \});\
    \cf10 return\cf9  \cf12 sharedMyManager\cf9 ;\
\}\
\
\cf10 -\cf9  (\cf13 id\cf9 )
\f3\b \cf12 init
\f1\b0 \cf9  \{\
  \cf10 if\cf9  (\cf12 self\cf9  
\f3\b =
\f1\b0  [\cf12 super\cf9  \cf12 init\cf9 ]) \{\
      \cf12 someProperty\cf9  
\f3\b =
\f1\b0  [[\cf12 NSString\cf9  \cf12 alloc\cf9 ] \cf14 initWithString:\cf13 @"Default Property Value"\cf9 ];\
  \}\
  \cf10 return\cf9  \cf12 self\cf9 ;\
\}\
\
\cf10 -\cf9  (\cf13 void\cf9 )
\f3\b \cf12 dealloc
\f1\b0 \cf9  \{\
  
\f2\i \cf7 // Should never be called, but just here for clarity really.
\f1\i0 \cf9 \
\}\
\
\cf10 @end\
\
\
\pard\pardeftab720\partightenfactor0

\f0\fs36\fsmilli18400 \cf2 \cb3 \
\
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 However, if you would rather not use GCD then you should use the following code for 
\f1\fs29\fsmilli14720 \cf5 \cb6 sharedManager
\f0\fs36\fsmilli18400 \cf2 \cb3 :\
\
\

\itap1\trowd \taflags0 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clwWidth592\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx4320
\clvertalc \clshdrawnil \clwWidth15147\clftsWidth3 \clmart10 \clmarl10 \clmarb10 \clmarr10 \clbrdrt\brdrnil \clbrdrl\brdrnil \clbrdrb\brdrnil \clbrdrr\brdrnil \clpadl0 \clpadr0 \gaph\cellx8640
\pard\intbl\itap1\pardeftab720\partightenfactor0

\f1\fs26 \cf9 \cb15 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \
\pard\intbl\itap1\pardeftab720\qr\partightenfactor0
\cf7 \shad\shadx0\shady20\shadr0\shado255 \shadc16 2\cf9 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \
\cf7 \shad\shadx0\shady20\shadr0\shado255 \shadc16 3\cf9 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \
\cf7 \shad\shadx0\shady20\shadr0\shado255 \shadc16 4\cf9 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \
\cf7 \shad\shadx0\shady20\shadr0\shado255 \shadc16 5\cf9 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \
\cf7 \shad\shadx0\shady20\shadr0\shado255 \shadc16 6\cf9 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \
\cf7 \shad\shadx0\shady20\shadr0\shado255 \shadc16 7\cf9 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \
\cf7 \shad\shadx0\shady20\shadr0\shado255 \shadc16 8\cf9 \shad\shadx0\shady20\shadr0\shado255 \shadc16 \cell 
\pard\intbl\itap1\pardeftab720\partightenfactor0
\cf10 \cb8 \shad0 +\cf9  (\cf13 id\cf9 )
\f3\b \cf12 sharedManager
\f1\b0 \cf9  \{\
    \cf10 static\cf9  \cf12 MyManager\cf9  
\f3\b *
\f1\b0 \cf12 sharedMyManager\cf9  
\f3\b =
\f1\b0  \cf14 nil\cf9 ;\
    \cf10 @synchronized\cf9 (\cf12 self\cf9 ) \{\
        \cf10 if\cf9  (\cf12 sharedMyManager\cf9  
\f3\b ==
\f1\b0  \cf14 nil\cf9 )\
            \cf12 sharedMyManager\cf9  
\f3\b =
\f1\b0  [[\cf12 self\cf9  \cf12 alloc\cf9 ] \cf12 init\cf9 ];\
    \}\
    \cf10 return\cf9  \cf12 sharedMyManager\cf9 ;\
\}\cell \lastrow\row
}